package template

import (
	"fmt"
	"strings"

	"github.com/machanirobotics/buffman/internal"
)

type Template struct {
	LanguagePrefix string
	FlatC          string
	Buffman        string
	Base           string
}

// NewTemplate creates a new Template instance
func NewTemplate(languagePrefix string) *Template {
	return &Template{
		LanguagePrefix: languagePrefix,
		FlatC:          internal.GetFlatCVersion(),
		Buffman:        internal.Version,
	}
}

func (t *Template) BuildDefaultComment(language string) string {
	var builder strings.Builder

	// Build the comment block with proper formatting
	builder.WriteString(t.LanguagePrefix + " DO NOT EDIT!\n")
	builder.WriteString(fmt.Sprintf("%s %s generated by Buffman ðŸ’ª\n", t.LanguagePrefix, language))
	builder.WriteString(fmt.Sprintf("%s Versions:\n", t.LanguagePrefix))
	builder.WriteString(fmt.Sprintf("%s\t\tBuffman: %s\n", t.LanguagePrefix, t.Buffman))
	builder.WriteString(fmt.Sprintf("%s\t\tFlatc: v%s\n", t.LanguagePrefix, t.FlatC))

	// Store the built string in Base and return it
	t.Base = builder.String()
	return t.Base
}

func (t *Template) GetDefaultString() string {
	return t.Base
}
