/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.9.1 */

#ifndef PB_COMMON_COMMON_TIMESTAMP_PB_H_INCLUDED
#define PB_COMMON_COMMON_TIMESTAMP_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _common_Timestamp {
    int64_t seconds;
    int32_t nanos;
} common_Timestamp;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define common_Timestamp_init_default            {0, 0}
#define common_Timestamp_init_zero               {0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define common_Timestamp_seconds_tag             1
#define common_Timestamp_nanos_tag               2

/* Struct field encoding specification for nanopb */
#define common_Timestamp_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT64,    seconds,           1) \
X(a, STATIC,   SINGULAR, INT32,    nanos,             2)
#define common_Timestamp_CALLBACK NULL
#define common_Timestamp_DEFAULT NULL

extern const pb_msgdesc_t common_Timestamp_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define common_Timestamp_fields &common_Timestamp_msg

/* Maximum encoded size of messages (where known) */
#define COMMON_COMMON_TIMESTAMP_PB_H_MAX_SIZE    common_Timestamp_size
#define common_Timestamp_size                    22

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
