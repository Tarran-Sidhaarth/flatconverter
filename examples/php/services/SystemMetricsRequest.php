// DO NOT EDIT!
// php generated by Buffman ğŸ’ª
// Versions:
// 		Buffman: 1.0.0
// 		Flatc: v25.2.10
// automatically generated by the FlatBuffers compiler, do not modify

namespace services;

use \Google\FlatBuffers\Struct;
use \Google\FlatBuffers\Table;
use \Google\FlatBuffers\ByteBuffer;
use \Google\FlatBuffers\FlatBufferBuilder;

class SystemMetricsRequest extends Table
{
    /**
     * @param ByteBuffer $bb
     * @return SystemMetricsRequest
     */
    public static function getRootAsSystemMetricsRequest(ByteBuffer $bb)
    {
        $obj = new SystemMetricsRequest();
        return ($obj->init($bb->getInt($bb->getPosition()) + $bb->getPosition(), $bb));
    }

    /**
     * @param int $_i offset
     * @param ByteBuffer $_bb
     * @return SystemMetricsRequest
     **/
    public function init($_i, ByteBuffer $_bb)
    {
        $this->bb_pos = $_i;
        $this->bb = $_bb;
        return $this;
    }

    public function getStartDate()
    {
        $obj = new Timestamp();
        $o = $this->__offset(4);
        return $o != 0 ? $obj->init($this->__indirect($o + $this->bb_pos), $this->bb) : 0;
    }

    public function getEndDate()
    {
        $obj = new Timestamp();
        $o = $this->__offset(6);
        return $o != 0 ? $obj->init($this->__indirect($o + $this->bb_pos), $this->bb) : 0;
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return void
     */
    public static function startSystemMetricsRequest(FlatBufferBuilder $builder)
    {
        $builder->StartObject(2);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return SystemMetricsRequest
     */
    public static function createSystemMetricsRequest(FlatBufferBuilder $builder, $start_date, $end_date)
    {
        $builder->startObject(2);
        self::addStartDate($builder, $start_date);
        self::addEndDate($builder, $end_date);
        $o = $builder->endObject();
        return $o;
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param VectorOffset
     * @return void
     */
    public static function addStartDate(FlatBufferBuilder $builder, $startDate)
    {
        $builder->addOffsetX(0, $startDate, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param VectorOffset
     * @return void
     */
    public static function addEndDate(FlatBufferBuilder $builder, $endDate)
    {
        $builder->addOffsetX(1, $endDate, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return int table offset
     */
    public static function endSystemMetricsRequest(FlatBufferBuilder $builder)
    {
        $o = $builder->endObject();
        return $o;
    }
}
