// DO NOT EDIT!
// Php generated by Buffman ğŸ’ª
// Versions:
//		Buffman: 0.0.1
//		Flatc: v25.2.10
// automatically generated by the FlatBuffers compiler, do not modify

namespace services;

use \Google\FlatBuffers\Struct;
use \Google\FlatBuffers\Table;
use \Google\FlatBuffers\ByteBuffer;
use \Google\FlatBuffers\FlatBufferBuilder;

class NotificationMetrics extends Table
{
    /**
     * @param ByteBuffer $bb
     * @return NotificationMetrics
     */
    public static function getRootAsNotificationMetrics(ByteBuffer $bb)
    {
        $obj = new NotificationMetrics();
        return ($obj->init($bb->getInt($bb->getPosition()) + $bb->getPosition(), $bb));
    }

    /**
     * @param int $_i offset
     * @param ByteBuffer $_bb
     * @return NotificationMetrics
     **/
    public function init($_i, ByteBuffer $_bb)
    {
        $this->bb_pos = $_i;
        $this->bb = $_bb;
        return $this;
    }

    public function getNotificationId()
    {
        $o = $this->__offset(4);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /**
     * @return int
     */
    public function getType()
    {
        $o = $this->__offset(6);
        return $o != 0 ? $this->bb->getInt($o + $this->bb_pos) : \services\NotificationType::NOTIFICATION_TYPE_UNKNOWN;
    }

    /**
     * @return bool
     */
    public function getDelivered()
    {
        $o = $this->__offset(8);
        return $o != 0 ? $this->bb->getBool($o + $this->bb_pos) : false;
    }

    /**
     * @return bool
     */
    public function getOpened()
    {
        $o = $this->__offset(10);
        return $o != 0 ? $this->bb->getBool($o + $this->bb_pos) : false;
    }

    /**
     * @return bool
     */
    public function getClicked()
    {
        $o = $this->__offset(12);
        return $o != 0 ? $this->bb->getBool($o + $this->bb_pos) : false;
    }

    public function getDeliveredAt()
    {
        $obj = new Timestamp();
        $o = $this->__offset(14);
        return $o != 0 ? $obj->init($this->__indirect($o + $this->bb_pos), $this->bb) : 0;
    }

    public function getOpenedAt()
    {
        $obj = new Timestamp();
        $o = $this->__offset(16);
        return $o != 0 ? $obj->init($this->__indirect($o + $this->bb_pos), $this->bb) : 0;
    }

    public function getClickedAt()
    {
        $obj = new Timestamp();
        $o = $this->__offset(18);
        return $o != 0 ? $obj->init($this->__indirect($o + $this->bb_pos), $this->bb) : 0;
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return void
     */
    public static function startNotificationMetrics(FlatBufferBuilder $builder)
    {
        $builder->StartObject(8);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return NotificationMetrics
     */
    public static function createNotificationMetrics(FlatBufferBuilder $builder, $notification_id, $type, $delivered, $opened, $clicked, $delivered_at, $opened_at, $clicked_at)
    {
        $builder->startObject(8);
        self::addNotificationId($builder, $notification_id);
        self::addType($builder, $type);
        self::addDelivered($builder, $delivered);
        self::addOpened($builder, $opened);
        self::addClicked($builder, $clicked);
        self::addDeliveredAt($builder, $delivered_at);
        self::addOpenedAt($builder, $opened_at);
        self::addClickedAt($builder, $clicked_at);
        $o = $builder->endObject();
        return $o;
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addNotificationId(FlatBufferBuilder $builder, $notificationId)
    {
        $builder->addOffsetX(0, $notificationId, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param int
     * @return void
     */
    public static function addType(FlatBufferBuilder $builder, $type)
    {
        $builder->addIntX(1, $type, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param bool
     * @return void
     */
    public static function addDelivered(FlatBufferBuilder $builder, $delivered)
    {
        $builder->addBoolX(2, $delivered, false);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param bool
     * @return void
     */
    public static function addOpened(FlatBufferBuilder $builder, $opened)
    {
        $builder->addBoolX(3, $opened, false);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param bool
     * @return void
     */
    public static function addClicked(FlatBufferBuilder $builder, $clicked)
    {
        $builder->addBoolX(4, $clicked, false);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param VectorOffset
     * @return void
     */
    public static function addDeliveredAt(FlatBufferBuilder $builder, $deliveredAt)
    {
        $builder->addOffsetX(5, $deliveredAt, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param VectorOffset
     * @return void
     */
    public static function addOpenedAt(FlatBufferBuilder $builder, $openedAt)
    {
        $builder->addOffsetX(6, $openedAt, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param VectorOffset
     * @return void
     */
    public static function addClickedAt(FlatBufferBuilder $builder, $clickedAt)
    {
        $builder->addOffsetX(7, $clickedAt, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return int table offset
     */
    public static function endNotificationMetrics(FlatBufferBuilder $builder)
    {
        $o = $builder->endObject();
        return $o;
    }
}
