// DO NOT EDIT!
// Php generated by Buffman ğŸ’ª
// Versions:
//		Buffman: 0.0.1
//		Flatc: v25.2.10
// automatically generated by the FlatBuffers compiler, do not modify

namespace services;

use \Google\FlatBuffers\Struct;
use \Google\FlatBuffers\Table;
use \Google\FlatBuffers\ByteBuffer;
use \Google\FlatBuffers\FlatBufferBuilder;

class MarkNotificationAsReadRequest extends Table
{
    /**
     * @param ByteBuffer $bb
     * @return MarkNotificationAsReadRequest
     */
    public static function getRootAsMarkNotificationAsReadRequest(ByteBuffer $bb)
    {
        $obj = new MarkNotificationAsReadRequest();
        return ($obj->init($bb->getInt($bb->getPosition()) + $bb->getPosition(), $bb));
    }

    /**
     * @param int $_i offset
     * @param ByteBuffer $_bb
     * @return MarkNotificationAsReadRequest
     **/
    public function init($_i, ByteBuffer $_bb)
    {
        $this->bb_pos = $_i;
        $this->bb = $_bb;
        return $this;
    }

    public function getNotificationId()
    {
        $o = $this->__offset(4);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    public function getUserId()
    {
        $o = $this->__offset(6);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return void
     */
    public static function startMarkNotificationAsReadRequest(FlatBufferBuilder $builder)
    {
        $builder->StartObject(2);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return MarkNotificationAsReadRequest
     */
    public static function createMarkNotificationAsReadRequest(FlatBufferBuilder $builder, $notification_id, $user_id)
    {
        $builder->startObject(2);
        self::addNotificationId($builder, $notification_id);
        self::addUserId($builder, $user_id);
        $o = $builder->endObject();
        return $o;
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addNotificationId(FlatBufferBuilder $builder, $notificationId)
    {
        $builder->addOffsetX(0, $notificationId, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addUserId(FlatBufferBuilder $builder, $userId)
    {
        $builder->addOffsetX(1, $userId, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return int table offset
     */
    public static function endMarkNotificationAsReadRequest(FlatBufferBuilder $builder)
    {
        $o = $builder->endObject();
        return $o;
    }
}
