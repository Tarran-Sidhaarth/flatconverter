// DO NOT EDIT!
// Php generated by Buffman ğŸ’ª
// Versions:
//		Buffman: 1.0.0
//		Flatc: v25.2.10
// automatically generated by the FlatBuffers compiler, do not modify

namespace services;

use \Google\FlatBuffers\Struct;
use \Google\FlatBuffers\Table;
use \Google\FlatBuffers\ByteBuffer;
use \Google\FlatBuffers\FlatBufferBuilder;

class SystemMetricsResponse extends Table
{
    /**
     * @param ByteBuffer $bb
     * @return SystemMetricsResponse
     */
    public static function getRootAsSystemMetricsResponse(ByteBuffer $bb)
    {
        $obj = new SystemMetricsResponse();
        return ($obj->init($bb->getInt($bb->getPosition()) + $bb->getPosition(), $bb));
    }

    /**
     * @param int $_i offset
     * @param ByteBuffer $_bb
     * @return SystemMetricsResponse
     **/
    public function init($_i, ByteBuffer $_bb)
    {
        $this->bb_pos = $_i;
        $this->bb = $_bb;
        return $this;
    }

    /**
     * @return int
     */
    public function getTotalUsers()
    {
        $o = $this->__offset(4);
        return $o != 0 ? $this->bb->getInt($o + $this->bb_pos) : 0;
    }

    /**
     * @return int
     */
    public function getActiveUsers()
    {
        $o = $this->__offset(6);
        return $o != 0 ? $this->bb->getInt($o + $this->bb_pos) : 0;
    }

    /**
     * @return int
     */
    public function getTotalNotificationsSent()
    {
        $o = $this->__offset(8);
        return $o != 0 ? $this->bb->getInt($o + $this->bb_pos) : 0;
    }

    /**
     * @return double
     */
    public function getNotificationOpenRate()
    {
        $o = $this->__offset(10);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /**
     * @returnVectorOffset
     */
    public function getActivityCounts($j)
    {
        $o = $this->__offset(12);
        $obj = new ActivityCountsEntry();
        return $o != 0 ? $obj->init($this->__indirect($this->__vector($o) + $j * 4), $this->bb) : null;
    }

    /**
     * @return int
     */
    public function getActivityCountsLength()
    {
        $o = $this->__offset(12);
        return $o != 0 ? $this->__vector_len($o) : 0;
    }

    public function getGeneratedAt()
    {
        $obj = new Timestamp();
        $o = $this->__offset(14);
        return $o != 0 ? $obj->init($this->__indirect($o + $this->bb_pos), $this->bb) : 0;
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return void
     */
    public static function startSystemMetricsResponse(FlatBufferBuilder $builder)
    {
        $builder->StartObject(6);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return SystemMetricsResponse
     */
    public static function createSystemMetricsResponse(FlatBufferBuilder $builder, $total_users, $active_users, $total_notifications_sent, $notification_open_rate, $activity_counts, $generated_at)
    {
        $builder->startObject(6);
        self::addTotalUsers($builder, $total_users);
        self::addActiveUsers($builder, $active_users);
        self::addTotalNotificationsSent($builder, $total_notifications_sent);
        self::addNotificationOpenRate($builder, $notification_open_rate);
        self::addActivityCounts($builder, $activity_counts);
        self::addGeneratedAt($builder, $generated_at);
        $o = $builder->endObject();
        return $o;
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param int
     * @return void
     */
    public static function addTotalUsers(FlatBufferBuilder $builder, $totalUsers)
    {
        $builder->addIntX(0, $totalUsers, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param int
     * @return void
     */
    public static function addActiveUsers(FlatBufferBuilder $builder, $activeUsers)
    {
        $builder->addIntX(1, $activeUsers, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param int
     * @return void
     */
    public static function addTotalNotificationsSent(FlatBufferBuilder $builder, $totalNotificationsSent)
    {
        $builder->addIntX(2, $totalNotificationsSent, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addNotificationOpenRate(FlatBufferBuilder $builder, $notificationOpenRate)
    {
        $builder->addDoubleX(3, $notificationOpenRate, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param VectorOffset
     * @return void
     */
    public static function addActivityCounts(FlatBufferBuilder $builder, $activityCounts)
    {
        $builder->addOffsetX(4, $activityCounts, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param array offset array
     * @return int vector offset
     */
    public static function createActivityCountsVector(FlatBufferBuilder $builder, array $data)
    {
        $builder->startVector(4, count($data), 4);
        for ($i = count($data) - 1; $i >= 0; $i--) {
            $builder->putOffset($data[$i]);
        }
        return $builder->endVector();
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param int $numElems
     * @return void
     */
    public static function startActivityCountsVector(FlatBufferBuilder $builder, $numElems)
    {
        $builder->startVector(4, $numElems, 4);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param VectorOffset
     * @return void
     */
    public static function addGeneratedAt(FlatBufferBuilder $builder, $generatedAt)
    {
        $builder->addOffsetX(5, $generatedAt, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return int table offset
     */
    public static function endSystemMetricsResponse(FlatBufferBuilder $builder)
    {
        $o = $builder->endObject();
        return $o;
    }
}
