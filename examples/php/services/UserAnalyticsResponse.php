// DO NOT EDIT!
// php generated by Buffman ğŸ’ª
// Versions:
//		Buffman: 1.0.0
//		Flatc: v25.2.10
// automatically generated by the FlatBuffers compiler, do not modify

namespace services;

use \Google\FlatBuffers\Struct;
use \Google\FlatBuffers\Table;
use \Google\FlatBuffers\ByteBuffer;
use \Google\FlatBuffers\FlatBufferBuilder;

class UserAnalyticsResponse extends Table
{
    /**
     * @param ByteBuffer $bb
     * @return UserAnalyticsResponse
     */
    public static function getRootAsUserAnalyticsResponse(ByteBuffer $bb)
    {
        $obj = new UserAnalyticsResponse();
        return ($obj->init($bb->getInt($bb->getPosition()) + $bb->getPosition(), $bb));
    }

    /**
     * @param int $_i offset
     * @param ByteBuffer $_bb
     * @return UserAnalyticsResponse
     **/
    public function init($_i, ByteBuffer $_bb)
    {
        $this->bb_pos = $_i;
        $this->bb = $_bb;
        return $this;
    }

    public function getUser()
    {
        $obj = new User();
        $o = $this->__offset(4);
        return $o != 0 ? $obj->init($this->__indirect($o + $this->bb_pos), $this->bb) : 0;
    }

    /**
     * @returnVectorOffset
     */
    public function getActivities($j)
    {
        $o = $this->__offset(6);
        $obj = new UserActivity();
        return $o != 0 ? $obj->init($this->__indirect($this->__vector($o) + $j * 4), $this->bb) : null;
    }

    /**
     * @return int
     */
    public function getActivitiesLength()
    {
        $o = $this->__offset(6);
        return $o != 0 ? $this->__vector_len($o) : 0;
    }

    /**
     * @returnVectorOffset
     */
    public function getNotificationMetrics($j)
    {
        $o = $this->__offset(8);
        $obj = new NotificationMetrics();
        return $o != 0 ? $obj->init($this->__indirect($this->__vector($o) + $j * 4), $this->bb) : null;
    }

    /**
     * @return int
     */
    public function getNotificationMetricsLength()
    {
        $o = $this->__offset(8);
        return $o != 0 ? $this->__vector_len($o) : 0;
    }

    /**
     * @return int
     */
    public function getTotalActivities()
    {
        $o = $this->__offset(10);
        return $o != 0 ? $this->bb->getInt($o + $this->bb_pos) : 0;
    }

    /**
     * @return int
     */
    public function getTotalNotificationsSent()
    {
        $o = $this->__offset(12);
        return $o != 0 ? $this->bb->getInt($o + $this->bb_pos) : 0;
    }

    /**
     * @return int
     */
    public function getTotalNotificationsOpened()
    {
        $o = $this->__offset(14);
        return $o != 0 ? $this->bb->getInt($o + $this->bb_pos) : 0;
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return void
     */
    public static function startUserAnalyticsResponse(FlatBufferBuilder $builder)
    {
        $builder->StartObject(6);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return UserAnalyticsResponse
     */
    public static function createUserAnalyticsResponse(FlatBufferBuilder $builder, $user, $activities, $notification_metrics, $total_activities, $total_notifications_sent, $total_notifications_opened)
    {
        $builder->startObject(6);
        self::addUser($builder, $user);
        self::addActivities($builder, $activities);
        self::addNotificationMetrics($builder, $notification_metrics);
        self::addTotalActivities($builder, $total_activities);
        self::addTotalNotificationsSent($builder, $total_notifications_sent);
        self::addTotalNotificationsOpened($builder, $total_notifications_opened);
        $o = $builder->endObject();
        return $o;
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param VectorOffset
     * @return void
     */
    public static function addUser(FlatBufferBuilder $builder, $user)
    {
        $builder->addOffsetX(0, $user, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param VectorOffset
     * @return void
     */
    public static function addActivities(FlatBufferBuilder $builder, $activities)
    {
        $builder->addOffsetX(1, $activities, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param array offset array
     * @return int vector offset
     */
    public static function createActivitiesVector(FlatBufferBuilder $builder, array $data)
    {
        $builder->startVector(4, count($data), 4);
        for ($i = count($data) - 1; $i >= 0; $i--) {
            $builder->putOffset($data[$i]);
        }
        return $builder->endVector();
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param int $numElems
     * @return void
     */
    public static function startActivitiesVector(FlatBufferBuilder $builder, $numElems)
    {
        $builder->startVector(4, $numElems, 4);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param VectorOffset
     * @return void
     */
    public static function addNotificationMetrics(FlatBufferBuilder $builder, $notificationMetrics)
    {
        $builder->addOffsetX(2, $notificationMetrics, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param array offset array
     * @return int vector offset
     */
    public static function createNotificationMetricsVector(FlatBufferBuilder $builder, array $data)
    {
        $builder->startVector(4, count($data), 4);
        for ($i = count($data) - 1; $i >= 0; $i--) {
            $builder->putOffset($data[$i]);
        }
        return $builder->endVector();
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param int $numElems
     * @return void
     */
    public static function startNotificationMetricsVector(FlatBufferBuilder $builder, $numElems)
    {
        $builder->startVector(4, $numElems, 4);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param int
     * @return void
     */
    public static function addTotalActivities(FlatBufferBuilder $builder, $totalActivities)
    {
        $builder->addIntX(3, $totalActivities, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param int
     * @return void
     */
    public static function addTotalNotificationsSent(FlatBufferBuilder $builder, $totalNotificationsSent)
    {
        $builder->addIntX(4, $totalNotificationsSent, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param int
     * @return void
     */
    public static function addTotalNotificationsOpened(FlatBufferBuilder $builder, $totalNotificationsOpened)
    {
        $builder->addIntX(5, $totalNotificationsOpened, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return int table offset
     */
    public static function endUserAnalyticsResponse(FlatBufferBuilder $builder)
    {
        $o = $builder->endObject();
        return $o;
    }
}
