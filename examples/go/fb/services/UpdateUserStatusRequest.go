// DO NOT EDIT!
// go generated by Buffman ðŸ’ª
// Versions:
// 		Buffman: 1.0.0
// 		Flatc: v25.2.10

package services

import (
	flatbuffers "github.com/google/flatbuffers/go"

	common "example.com/buffman/fb/common"
)

type UpdateUserStatusRequest struct {
	_tab flatbuffers.Table
}

func GetRootAsUpdateUserStatusRequest(buf []byte, offset flatbuffers.UOffsetT) *UpdateUserStatusRequest {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &UpdateUserStatusRequest{}
	x.Init(buf, n+offset)
	return x
}

func FinishUpdateUserStatusRequestBuffer(builder *flatbuffers.Builder, offset flatbuffers.UOffsetT) {
	builder.Finish(offset)
}

func GetSizePrefixedRootAsUpdateUserStatusRequest(buf []byte, offset flatbuffers.UOffsetT) *UpdateUserStatusRequest {
	n := flatbuffers.GetUOffsetT(buf[offset+flatbuffers.SizeUint32:])
	x := &UpdateUserStatusRequest{}
	x.Init(buf, n+offset+flatbuffers.SizeUint32)
	return x
}

func FinishSizePrefixedUpdateUserStatusRequestBuffer(builder *flatbuffers.Builder, offset flatbuffers.UOffsetT) {
	builder.FinishSizePrefixed(offset)
}

func (rcv *UpdateUserStatusRequest) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *UpdateUserStatusRequest) Table() flatbuffers.Table {
	return rcv._tab
}

func (rcv *UpdateUserStatusRequest) UserId() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *UpdateUserStatusRequest) NewStatus() common.Status {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		return common.Status(rcv._tab.GetInt32(o + rcv._tab.Pos))
	}
	return 0
}

func (rcv *UpdateUserStatusRequest) MutateNewStatus(n common.Status) bool {
	return rcv._tab.MutateInt32Slot(6, int32(n))
}

func UpdateUserStatusRequestStart(builder *flatbuffers.Builder) {
	builder.StartObject(2)
}
func UpdateUserStatusRequestAddUserId(builder *flatbuffers.Builder, userId flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(0, flatbuffers.UOffsetT(userId), 0)
}
func UpdateUserStatusRequestAddNewStatus(builder *flatbuffers.Builder, newStatus common.Status) {
	builder.PrependInt32Slot(1, int32(newStatus), 0)
}
func UpdateUserStatusRequestEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
