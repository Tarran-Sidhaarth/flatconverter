// DO NOT EDIT!
// Csharp generated by Buffman ðŸ’ª
// Versions:
//		Buffman: 0.0.1
//		Flatc: v25.2.10
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace services.SystemMetricsResponse_
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct ActivityCountsEntry : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static ActivityCountsEntry GetRootAsActivityCountsEntry(ByteBuffer _bb) { return GetRootAsActivityCountsEntry(_bb, new ActivityCountsEntry()); }
  public static ActivityCountsEntry GetRootAsActivityCountsEntry(ByteBuffer _bb, ActivityCountsEntry obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ActivityCountsEntry __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string Key { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetKeyBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetKeyBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetKeyArray() { return __p.__vector_as_array<byte>(4); }
  public int Value { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<services.SystemMetricsResponse_.ActivityCountsEntry> CreateActivityCountsEntry(FlatBufferBuilder builder,
      StringOffset keyOffset = default(StringOffset),
      int value = 0) {
    builder.StartTable(2);
    ActivityCountsEntry.AddValue(builder, value);
    ActivityCountsEntry.AddKey(builder, keyOffset);
    return ActivityCountsEntry.EndActivityCountsEntry(builder);
  }

  public static void StartActivityCountsEntry(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddKey(FlatBufferBuilder builder, StringOffset keyOffset) { builder.AddOffset(0, keyOffset.Value, 0); }
  public static void AddValue(FlatBufferBuilder builder, int value) { builder.AddInt(1, value, 0); }
  public static Offset<services.SystemMetricsResponse_.ActivityCountsEntry> EndActivityCountsEntry(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<services.SystemMetricsResponse_.ActivityCountsEntry>(o);
  }
}


static public class ActivityCountsEntryVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyString(tablePos, 4 /*Key*/, false)
      && verifier.VerifyField(tablePos, 6 /*Value*/, 4 /*int*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
