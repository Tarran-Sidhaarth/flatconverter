// DO NOT EDIT!
// csharp generated by Buffman ðŸ’ª
// Versions:
//		Buffman: 1.0.0
//		Flatc: v25.2.10
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace services
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct UserAnalyticsRequest : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static UserAnalyticsRequest GetRootAsUserAnalyticsRequest(ByteBuffer _bb) { return GetRootAsUserAnalyticsRequest(_bb, new UserAnalyticsRequest()); }
  public static UserAnalyticsRequest GetRootAsUserAnalyticsRequest(ByteBuffer _bb, UserAnalyticsRequest obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public UserAnalyticsRequest __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string UserId { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetUserIdBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetUserIdBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetUserIdArray() { return __p.__vector_as_array<byte>(4); }
  public common.Timestamp? StartDate { get { int o = __p.__offset(6); return o != 0 ? (common.Timestamp?)(new common.Timestamp()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public common.Timestamp? EndDate { get { int o = __p.__offset(8); return o != 0 ? (common.Timestamp?)(new common.Timestamp()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<services.UserAnalyticsRequest> CreateUserAnalyticsRequest(FlatBufferBuilder builder,
      StringOffset user_idOffset = default(StringOffset),
      Offset<common.Timestamp> start_dateOffset = default(Offset<common.Timestamp>),
      Offset<common.Timestamp> end_dateOffset = default(Offset<common.Timestamp>)) {
    builder.StartTable(3);
    UserAnalyticsRequest.AddEndDate(builder, end_dateOffset);
    UserAnalyticsRequest.AddStartDate(builder, start_dateOffset);
    UserAnalyticsRequest.AddUserId(builder, user_idOffset);
    return UserAnalyticsRequest.EndUserAnalyticsRequest(builder);
  }

  public static void StartUserAnalyticsRequest(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddUserId(FlatBufferBuilder builder, StringOffset userIdOffset) { builder.AddOffset(0, userIdOffset.Value, 0); }
  public static void AddStartDate(FlatBufferBuilder builder, Offset<common.Timestamp> startDateOffset) { builder.AddOffset(1, startDateOffset.Value, 0); }
  public static void AddEndDate(FlatBufferBuilder builder, Offset<common.Timestamp> endDateOffset) { builder.AddOffset(2, endDateOffset.Value, 0); }
  public static Offset<services.UserAnalyticsRequest> EndUserAnalyticsRequest(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<services.UserAnalyticsRequest>(o);
  }
}


static public class UserAnalyticsRequestVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyString(tablePos, 4 /*UserId*/, false)
      && verifier.VerifyTable(tablePos, 6 /*StartDate*/, common.TimestampVerify.Verify, false)
      && verifier.VerifyTable(tablePos, 8 /*EndDate*/, common.TimestampVerify.Verify, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
