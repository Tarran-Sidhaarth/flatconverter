// DO NOT EDIT!
// csharp generated by Buffman ðŸ’ª
// Versions:
// 		Buffman: 1.0.0
// 		Flatc: v25.2.10
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace services
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct Notification : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static Notification GetRootAsNotification(ByteBuffer _bb) { return GetRootAsNotification(_bb, new Notification()); }
  public static Notification GetRootAsNotification(ByteBuffer _bb, Notification obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public Notification __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string NotificationId { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNotificationIdBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetNotificationIdBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetNotificationIdArray() { return __p.__vector_as_array<byte>(4); }
  public string RecipientUserId { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetRecipientUserIdBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetRecipientUserIdBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetRecipientUserIdArray() { return __p.__vector_as_array<byte>(6); }
  public services.NotificationType Type { get { int o = __p.__offset(8); return o != 0 ? (services.NotificationType)__p.bb.GetInt(o + __p.bb_pos) : services.NotificationType.NOTIFICATION_TYPE_UNKNOWN; } }
  public string Title { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetTitleBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetTitleBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetTitleArray() { return __p.__vector_as_array<byte>(10); }
  public string Content { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetContentBytes() { return __p.__vector_as_span<byte>(12, 1); }
#else
  public ArraySegment<byte>? GetContentBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetContentArray() { return __p.__vector_as_array<byte>(12); }
  public services.Priority Priority { get { int o = __p.__offset(14); return o != 0 ? (services.Priority)__p.bb.GetInt(o + __p.bb_pos) : services.Priority.PRIORITY_LOW; } }
  public common.Status Status { get { int o = __p.__offset(16); return o != 0 ? (common.Status)__p.bb.GetInt(o + __p.bb_pos) : common.Status.STATUS_UNKNOWN; } }
  public common.Timestamp? CreatedAt { get { int o = __p.__offset(18); return o != 0 ? (common.Timestamp?)(new common.Timestamp()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public common.Timestamp? SentAt { get { int o = __p.__offset(20); return o != 0 ? (common.Timestamp?)(new common.Timestamp()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public services.Notification_.MetadataEntry? Metadata(int j) { int o = __p.__offset(22); return o != 0 ? (services.Notification_.MetadataEntry?)(new services.Notification_.MetadataEntry()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int MetadataLength { get { int o = __p.__offset(22); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<services.Notification> CreateNotification(FlatBufferBuilder builder,
      StringOffset notification_idOffset = default(StringOffset),
      StringOffset recipient_user_idOffset = default(StringOffset),
      services.NotificationType type = services.NotificationType.NOTIFICATION_TYPE_UNKNOWN,
      StringOffset titleOffset = default(StringOffset),
      StringOffset contentOffset = default(StringOffset),
      services.Priority priority = services.Priority.PRIORITY_LOW,
      common.Status status = common.Status.STATUS_UNKNOWN,
      Offset<common.Timestamp> created_atOffset = default(Offset<common.Timestamp>),
      Offset<common.Timestamp> sent_atOffset = default(Offset<common.Timestamp>),
      VectorOffset metadataOffset = default(VectorOffset)) {
    builder.StartTable(10);
    Notification.AddMetadata(builder, metadataOffset);
    Notification.AddSentAt(builder, sent_atOffset);
    Notification.AddCreatedAt(builder, created_atOffset);
    Notification.AddStatus(builder, status);
    Notification.AddPriority(builder, priority);
    Notification.AddContent(builder, contentOffset);
    Notification.AddTitle(builder, titleOffset);
    Notification.AddType(builder, type);
    Notification.AddRecipientUserId(builder, recipient_user_idOffset);
    Notification.AddNotificationId(builder, notification_idOffset);
    return Notification.EndNotification(builder);
  }

  public static void StartNotification(FlatBufferBuilder builder) { builder.StartTable(10); }
  public static void AddNotificationId(FlatBufferBuilder builder, StringOffset notificationIdOffset) { builder.AddOffset(0, notificationIdOffset.Value, 0); }
  public static void AddRecipientUserId(FlatBufferBuilder builder, StringOffset recipientUserIdOffset) { builder.AddOffset(1, recipientUserIdOffset.Value, 0); }
  public static void AddType(FlatBufferBuilder builder, services.NotificationType type) { builder.AddInt(2, (int)type, 0); }
  public static void AddTitle(FlatBufferBuilder builder, StringOffset titleOffset) { builder.AddOffset(3, titleOffset.Value, 0); }
  public static void AddContent(FlatBufferBuilder builder, StringOffset contentOffset) { builder.AddOffset(4, contentOffset.Value, 0); }
  public static void AddPriority(FlatBufferBuilder builder, services.Priority priority) { builder.AddInt(5, (int)priority, 0); }
  public static void AddStatus(FlatBufferBuilder builder, common.Status status) { builder.AddInt(6, (int)status, 0); }
  public static void AddCreatedAt(FlatBufferBuilder builder, Offset<common.Timestamp> createdAtOffset) { builder.AddOffset(7, createdAtOffset.Value, 0); }
  public static void AddSentAt(FlatBufferBuilder builder, Offset<common.Timestamp> sentAtOffset) { builder.AddOffset(8, sentAtOffset.Value, 0); }
  public static void AddMetadata(FlatBufferBuilder builder, VectorOffset metadataOffset) { builder.AddOffset(9, metadataOffset.Value, 0); }
  public static VectorOffset CreateMetadataVector(FlatBufferBuilder builder, Offset<services.Notification_.MetadataEntry>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateMetadataVectorBlock(FlatBufferBuilder builder, Offset<services.Notification_.MetadataEntry>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateMetadataVectorBlock(FlatBufferBuilder builder, ArraySegment<Offset<services.Notification_.MetadataEntry>> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateMetadataVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<Offset<services.Notification_.MetadataEntry>>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartMetadataVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<services.Notification> EndNotification(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<services.Notification>(o);
  }
}


static public class NotificationVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyString(tablePos, 4 /*NotificationId*/, false)
      && verifier.VerifyString(tablePos, 6 /*RecipientUserId*/, false)
      && verifier.VerifyField(tablePos, 8 /*Type*/, 4 /*services.NotificationType*/, 4, false)
      && verifier.VerifyString(tablePos, 10 /*Title*/, false)
      && verifier.VerifyString(tablePos, 12 /*Content*/, false)
      && verifier.VerifyField(tablePos, 14 /*Priority*/, 4 /*services.Priority*/, 4, false)
      && verifier.VerifyField(tablePos, 16 /*Status*/, 4 /*common.Status*/, 4, false)
      && verifier.VerifyTable(tablePos, 18 /*CreatedAt*/, common.TimestampVerify.Verify, false)
      && verifier.VerifyTable(tablePos, 20 /*SentAt*/, common.TimestampVerify.Verify, false)
      && verifier.VerifyVectorOfTables(tablePos, 22 /*Metadata*/, services.Notification_.MetadataEntryVerify.Verify, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
