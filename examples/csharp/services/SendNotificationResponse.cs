// DO NOT EDIT!
// csharp generated by Buffman ðŸ’ª
// Versions:
// 		Buffman: 1.0.0
// 		Flatc: v25.2.10
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace services
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct SendNotificationResponse : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static SendNotificationResponse GetRootAsSendNotificationResponse(ByteBuffer _bb) { return GetRootAsSendNotificationResponse(_bb, new SendNotificationResponse()); }
  public static SendNotificationResponse GetRootAsSendNotificationResponse(ByteBuffer _bb, SendNotificationResponse obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SendNotificationResponse __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string NotificationId { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNotificationIdBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetNotificationIdBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetNotificationIdArray() { return __p.__vector_as_array<byte>(4); }
  public bool Success { get { int o = __p.__offset(6); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public string Message { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetMessageBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetMessageBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetMessageArray() { return __p.__vector_as_array<byte>(8); }

  public static Offset<services.SendNotificationResponse> CreateSendNotificationResponse(FlatBufferBuilder builder,
      StringOffset notification_idOffset = default(StringOffset),
      bool success = false,
      StringOffset messageOffset = default(StringOffset)) {
    builder.StartTable(3);
    SendNotificationResponse.AddMessage(builder, messageOffset);
    SendNotificationResponse.AddNotificationId(builder, notification_idOffset);
    SendNotificationResponse.AddSuccess(builder, success);
    return SendNotificationResponse.EndSendNotificationResponse(builder);
  }

  public static void StartSendNotificationResponse(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddNotificationId(FlatBufferBuilder builder, StringOffset notificationIdOffset) { builder.AddOffset(0, notificationIdOffset.Value, 0); }
  public static void AddSuccess(FlatBufferBuilder builder, bool success) { builder.AddBool(1, success, false); }
  public static void AddMessage(FlatBufferBuilder builder, StringOffset messageOffset) { builder.AddOffset(2, messageOffset.Value, 0); }
  public static Offset<services.SendNotificationResponse> EndSendNotificationResponse(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<services.SendNotificationResponse>(o);
  }
}


static public class SendNotificationResponseVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyString(tablePos, 4 /*NotificationId*/, false)
      && verifier.VerifyField(tablePos, 6 /*Success*/, 1 /*bool*/, 1, false)
      && verifier.VerifyString(tablePos, 8 /*Message*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
