syntax = "proto3";

package services;

import "common/timestamp.proto";
import "services/user_service.proto";
import "services/notification_service.proto";

option go_package = "github.com/yourorg/protos/services";

message UserActivity {
  string activity_id = 1;
  string user_id = 2;
  string action = 3;
  string resource = 4;
  common.Timestamp timestamp = 5;
  map<string, string> properties = 6;
  string session_id = 7;
}

message NotificationMetrics {
  string notification_id = 1;
  NotificationType type = 2;
  bool delivered = 3;
  bool opened = 4;
  bool clicked = 5;
  common.Timestamp delivered_at = 6;
  common.Timestamp opened_at = 7;
  common.Timestamp clicked_at = 8;
}

message UserAnalyticsRequest {
  string user_id = 1;
  common.Timestamp start_date = 2;
  common.Timestamp end_date = 3;
}

message UserAnalyticsResponse {
  User user = 1; // Dependency on user_service.proto
  repeated UserActivity activities = 2;
  repeated NotificationMetrics notification_metrics = 3;
  int32 total_activities = 4;
  int32 total_notifications_sent = 5;
  int32 total_notifications_opened = 6;
}

message SystemMetricsRequest {
  common.Timestamp start_date = 1;
  common.Timestamp end_date = 2;
}

message SystemMetricsResponse {
  int32 total_users = 1;
  int32 active_users = 2;
  int32 total_notifications_sent = 3;
  double notification_open_rate = 4;
  map<string, int32> activity_counts = 5;
  common.Timestamp generated_at = 6;
}

service AnalyticsService {
  rpc GetUserAnalytics(UserAnalyticsRequest) returns (UserAnalyticsResponse);
  rpc GetSystemMetrics(SystemMetricsRequest) returns (SystemMetricsResponse);
  rpc TrackUserActivity(UserActivity) returns (TrackUserActivityResponse);
}

message TrackUserActivityResponse {
  bool success = 1;
  string message = 2;
}
