// automatically generated by the FlatBuffers compiler, do not modify

package com.fb.services;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class GetUserNotificationsResponse extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_25_2_10(); }
  public static GetUserNotificationsResponse getRootAsGetUserNotificationsResponse(ByteBuffer _bb) { return getRootAsGetUserNotificationsResponse(_bb, new GetUserNotificationsResponse()); }
  public static GetUserNotificationsResponse getRootAsGetUserNotificationsResponse(ByteBuffer _bb, GetUserNotificationsResponse obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public GetUserNotificationsResponse __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public com.fb.services.Notification notifications(int j) { return notifications(new com.fb.services.Notification(), j); }
  public com.fb.services.Notification notifications(com.fb.services.Notification obj, int j) { int o = __offset(4); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int notificationsLength() { int o = __offset(4); return o != 0 ? __vector_len(o) : 0; }
  public com.fb.services.Notification.Vector notificationsVector() { return notificationsVector(new com.fb.services.Notification.Vector()); }
  public com.fb.services.Notification.Vector notificationsVector(com.fb.services.Notification.Vector obj) { int o = __offset(4); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }
  public int totalCount() { int o = __offset(6); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public com.fb.services.User userInfo() { return userInfo(new com.fb.services.User()); }
  public com.fb.services.User userInfo(com.fb.services.User obj) { int o = __offset(8); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }

  public static int createGetUserNotificationsResponse(FlatBufferBuilder builder,
      int notificationsOffset,
      int totalCount,
      int userInfoOffset) {
    builder.startTable(3);
    GetUserNotificationsResponse.addUserInfo(builder, userInfoOffset);
    GetUserNotificationsResponse.addTotalCount(builder, totalCount);
    GetUserNotificationsResponse.addNotifications(builder, notificationsOffset);
    return GetUserNotificationsResponse.endGetUserNotificationsResponse(builder);
  }

  public static void startGetUserNotificationsResponse(FlatBufferBuilder builder) { builder.startTable(3); }
  public static void addNotifications(FlatBufferBuilder builder, int notificationsOffset) { builder.addOffset(0, notificationsOffset, 0); }
  public static int createNotificationsVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startNotificationsVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addTotalCount(FlatBufferBuilder builder, int totalCount) { builder.addInt(1, totalCount, 0); }
  public static void addUserInfo(FlatBufferBuilder builder, int userInfoOffset) { builder.addOffset(2, userInfoOffset, 0); }
  public static int endGetUserNotificationsResponse(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public GetUserNotificationsResponse get(int j) { return get(new GetUserNotificationsResponse(), j); }
    public GetUserNotificationsResponse get(GetUserNotificationsResponse obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

