// automatically generated by the FlatBuffers compiler, do not modify

package com.fb.services;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class MarkNotificationAsReadRequest extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_25_2_10(); }
  public static MarkNotificationAsReadRequest getRootAsMarkNotificationAsReadRequest(ByteBuffer _bb) { return getRootAsMarkNotificationAsReadRequest(_bb, new MarkNotificationAsReadRequest()); }
  public static MarkNotificationAsReadRequest getRootAsMarkNotificationAsReadRequest(ByteBuffer _bb, MarkNotificationAsReadRequest obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public MarkNotificationAsReadRequest __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String notificationId() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer notificationIdAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer notificationIdInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  public String userId() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer userIdAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer userIdInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }

  public static int createMarkNotificationAsReadRequest(FlatBufferBuilder builder,
      int notificationIdOffset,
      int userIdOffset) {
    builder.startTable(2);
    MarkNotificationAsReadRequest.addUserId(builder, userIdOffset);
    MarkNotificationAsReadRequest.addNotificationId(builder, notificationIdOffset);
    return MarkNotificationAsReadRequest.endMarkNotificationAsReadRequest(builder);
  }

  public static void startMarkNotificationAsReadRequest(FlatBufferBuilder builder) { builder.startTable(2); }
  public static void addNotificationId(FlatBufferBuilder builder, int notificationIdOffset) { builder.addOffset(0, notificationIdOffset, 0); }
  public static void addUserId(FlatBufferBuilder builder, int userIdOffset) { builder.addOffset(1, userIdOffset, 0); }
  public static int endMarkNotificationAsReadRequest(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public MarkNotificationAsReadRequest get(int j) { return get(new MarkNotificationAsReadRequest(), j); }
    public MarkNotificationAsReadRequest get(MarkNotificationAsReadRequest obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

