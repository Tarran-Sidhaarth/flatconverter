// DO NOT EDIT!
// Ts generated by Buffman ðŸ’ª
// Versions:
//		Buffman: 0.0.1
//		Flatc: v25.2.10

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { User } from '../services/user.js';


export class CreateUserResponse {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CreateUserResponse {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCreateUserResponse(bb:flatbuffers.ByteBuffer, obj?:CreateUserResponse):CreateUserResponse {
  return (obj || new CreateUserResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCreateUserResponse(bb:flatbuffers.ByteBuffer, obj?:CreateUserResponse):CreateUserResponse {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CreateUserResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

user(obj?:User):User|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new User()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

success():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

message():string|null
message(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
message(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startCreateUserResponse(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addUser(builder:flatbuffers.Builder, userOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, userOffset, 0);
}

static addSuccess(builder:flatbuffers.Builder, success:boolean) {
  builder.addFieldInt8(1, +success, +false);
}

static addMessage(builder:flatbuffers.Builder, messageOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, messageOffset, 0);
}

static endCreateUserResponse(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCreateUserResponse(builder:flatbuffers.Builder, userOffset:flatbuffers.Offset, success:boolean, messageOffset:flatbuffers.Offset):flatbuffers.Offset {
  CreateUserResponse.startCreateUserResponse(builder);
  CreateUserResponse.addUser(builder, userOffset);
  CreateUserResponse.addSuccess(builder, success);
  CreateUserResponse.addMessage(builder, messageOffset);
  return CreateUserResponse.endCreateUserResponse(builder);
}
}
