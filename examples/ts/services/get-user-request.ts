// DO NOT EDIT!
// ts generated by Buffman ðŸ’ª
// Versions:
//		Buffman: 1.0.0
//		Flatc: v25.2.10

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

export class GetUserRequest {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):GetUserRequest {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsGetUserRequest(bb:flatbuffers.ByteBuffer, obj?:GetUserRequest):GetUserRequest {
  return (obj || new GetUserRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsGetUserRequest(bb:flatbuffers.ByteBuffer, obj?:GetUserRequest):GetUserRequest {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new GetUserRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

userId():string|null
userId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
userId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startGetUserRequest(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static addUserId(builder:flatbuffers.Builder, userIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, userIdOffset, 0);
}

static endGetUserRequest(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createGetUserRequest(builder:flatbuffers.Builder, userIdOffset:flatbuffers.Offset):flatbuffers.Offset {
  GetUserRequest.startGetUserRequest(builder);
  GetUserRequest.addUserId(builder, userIdOffset);
  return GetUserRequest.endGetUserRequest(builder);
}
}
