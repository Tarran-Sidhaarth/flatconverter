// DO NOT EDIT!
// Ts generated by Buffman ðŸ’ª
// Versions:
//		Buffman: 0.0.1
//		Flatc: v25.2.10

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { Notification } from '../services/notification.js';
import { User } from '../services/user.js';


export class GetUserNotificationsResponse {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):GetUserNotificationsResponse {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsGetUserNotificationsResponse(bb:flatbuffers.ByteBuffer, obj?:GetUserNotificationsResponse):GetUserNotificationsResponse {
  return (obj || new GetUserNotificationsResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsGetUserNotificationsResponse(bb:flatbuffers.ByteBuffer, obj?:GetUserNotificationsResponse):GetUserNotificationsResponse {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new GetUserNotificationsResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

notifications(index: number, obj?:Notification):Notification|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new Notification()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

notificationsLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

totalCount():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

userInfo(obj?:User):User|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new User()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static startGetUserNotificationsResponse(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addNotifications(builder:flatbuffers.Builder, notificationsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, notificationsOffset, 0);
}

static createNotificationsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startNotificationsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addTotalCount(builder:flatbuffers.Builder, totalCount:number) {
  builder.addFieldInt32(1, totalCount, 0);
}

static addUserInfo(builder:flatbuffers.Builder, userInfoOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, userInfoOffset, 0);
}

static endGetUserNotificationsResponse(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

}
