// DO NOT EDIT!
// ts generated by Buffman ðŸ’ª
// Versions:
//		Buffman: 1.0.0
//		Flatc: v25.2.10

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { User } from '../services/user.js';


export class GetUserResponse {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):GetUserResponse {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsGetUserResponse(bb:flatbuffers.ByteBuffer, obj?:GetUserResponse):GetUserResponse {
  return (obj || new GetUserResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsGetUserResponse(bb:flatbuffers.ByteBuffer, obj?:GetUserResponse):GetUserResponse {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new GetUserResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

user(obj?:User):User|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new User()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

found():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

static startGetUserResponse(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addUser(builder:flatbuffers.Builder, userOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, userOffset, 0);
}

static addFound(builder:flatbuffers.Builder, found:boolean) {
  builder.addFieldInt8(1, +found, +false);
}

static endGetUserResponse(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createGetUserResponse(builder:flatbuffers.Builder, userOffset:flatbuffers.Offset, found:boolean):flatbuffers.Offset {
  GetUserResponse.startGetUserResponse(builder);
  GetUserResponse.addUser(builder, userOffset);
  GetUserResponse.addFound(builder, found);
  return GetUserResponse.endGetUserResponse(builder);
}
}
