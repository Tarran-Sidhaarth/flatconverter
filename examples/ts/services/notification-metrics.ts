// DO NOT EDIT!
// Ts generated by Buffman ðŸ’ª
// Versions:
//		Buffman: 1.0.0
//		Flatc: v25.2.10

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { Timestamp } from '../common/timestamp.js';
import { NotificationType } from '../services/notification-type.js';


export class NotificationMetrics {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):NotificationMetrics {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsNotificationMetrics(bb:flatbuffers.ByteBuffer, obj?:NotificationMetrics):NotificationMetrics {
  return (obj || new NotificationMetrics()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsNotificationMetrics(bb:flatbuffers.ByteBuffer, obj?:NotificationMetrics):NotificationMetrics {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new NotificationMetrics()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

notificationId():string|null
notificationId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
notificationId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

type():NotificationType {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : NotificationType.NOTIFICATION_TYPE_UNKNOWN;
}

delivered():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

opened():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

clicked():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

deliveredAt(obj?:Timestamp):Timestamp|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? (obj || new Timestamp()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

openedAt(obj?:Timestamp):Timestamp|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? (obj || new Timestamp()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

clickedAt(obj?:Timestamp):Timestamp|null {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? (obj || new Timestamp()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static startNotificationMetrics(builder:flatbuffers.Builder) {
  builder.startObject(8);
}

static addNotificationId(builder:flatbuffers.Builder, notificationIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, notificationIdOffset, 0);
}

static addType(builder:flatbuffers.Builder, type:NotificationType) {
  builder.addFieldInt32(1, type, NotificationType.NOTIFICATION_TYPE_UNKNOWN);
}

static addDelivered(builder:flatbuffers.Builder, delivered:boolean) {
  builder.addFieldInt8(2, +delivered, +false);
}

static addOpened(builder:flatbuffers.Builder, opened:boolean) {
  builder.addFieldInt8(3, +opened, +false);
}

static addClicked(builder:flatbuffers.Builder, clicked:boolean) {
  builder.addFieldInt8(4, +clicked, +false);
}

static addDeliveredAt(builder:flatbuffers.Builder, deliveredAtOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, deliveredAtOffset, 0);
}

static addOpenedAt(builder:flatbuffers.Builder, openedAtOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, openedAtOffset, 0);
}

static addClickedAt(builder:flatbuffers.Builder, clickedAtOffset:flatbuffers.Offset) {
  builder.addFieldOffset(7, clickedAtOffset, 0);
}

static endNotificationMetrics(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

}
