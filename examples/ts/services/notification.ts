// DO NOT EDIT!
// Ts generated by Buffman ğŸ’ª
// Versions:
//		Buffman: 0.0.1
//		Flatc: v25.2.10

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { Status } from '../common/status.js';
import { Timestamp } from '../common/timestamp.js';
import { NotificationType } from '../services/notification-type.js';
import { MetadataEntry } from '../services/notification-/metadata-entry.js';
import { Priority } from '../services/priority.js';


export class Notification {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):Notification {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsNotification(bb:flatbuffers.ByteBuffer, obj?:Notification):Notification {
  return (obj || new Notification()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsNotification(bb:flatbuffers.ByteBuffer, obj?:Notification):Notification {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new Notification()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

notificationId():string|null
notificationId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
notificationId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

recipientUserId():string|null
recipientUserId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
recipientUserId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

type():NotificationType {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : NotificationType.NOTIFICATION_TYPE_UNKNOWN;
}

title():string|null
title(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
title(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

content():string|null
content(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
content(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

priority():Priority {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : Priority.PRIORITY_LOW;
}

status():Status {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : Status.STATUS_UNKNOWN;
}

createdAt(obj?:Timestamp):Timestamp|null {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? (obj || new Timestamp()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

sentAt(obj?:Timestamp):Timestamp|null {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? (obj || new Timestamp()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

metadata(index: number, obj?:MetadataEntry):MetadataEntry|null {
  const offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? (obj || new MetadataEntry()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

metadataLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static startNotification(builder:flatbuffers.Builder) {
  builder.startObject(10);
}

static addNotificationId(builder:flatbuffers.Builder, notificationIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, notificationIdOffset, 0);
}

static addRecipientUserId(builder:flatbuffers.Builder, recipientUserIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, recipientUserIdOffset, 0);
}

static addType(builder:flatbuffers.Builder, type:NotificationType) {
  builder.addFieldInt32(2, type, NotificationType.NOTIFICATION_TYPE_UNKNOWN);
}

static addTitle(builder:flatbuffers.Builder, titleOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, titleOffset, 0);
}

static addContent(builder:flatbuffers.Builder, contentOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, contentOffset, 0);
}

static addPriority(builder:flatbuffers.Builder, priority:Priority) {
  builder.addFieldInt32(5, priority, Priority.PRIORITY_LOW);
}

static addStatus(builder:flatbuffers.Builder, status:Status) {
  builder.addFieldInt32(6, status, Status.STATUS_UNKNOWN);
}

static addCreatedAt(builder:flatbuffers.Builder, createdAtOffset:flatbuffers.Offset) {
  builder.addFieldOffset(7, createdAtOffset, 0);
}

static addSentAt(builder:flatbuffers.Builder, sentAtOffset:flatbuffers.Offset) {
  builder.addFieldOffset(8, sentAtOffset, 0);
}

static addMetadata(builder:flatbuffers.Builder, metadataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(9, metadataOffset, 0);
}

static createMetadataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startMetadataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endNotification(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

}
