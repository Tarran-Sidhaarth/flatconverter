// DO NOT EDIT!
// ts generated by Buffman ğŸ’ª
// Versions:
// 		Buffman: 1.0.0
// 		Flatc: v25.2.10

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { Address } from '../common/address.js';
import { Status } from '../common/status.js';
import { Timestamp } from '../common/timestamp.js';


export class User {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):User {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsUser(bb:flatbuffers.ByteBuffer, obj?:User):User {
  return (obj || new User()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsUser(bb:flatbuffers.ByteBuffer, obj?:User):User {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new User()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

userId():string|null
userId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
userId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

email():string|null
email(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
email(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

firstName():string|null
firstName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
firstName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

lastName():string|null
lastName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
lastName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

address(obj?:Address):Address|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? (obj || new Address()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

status():Status {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : Status.STATUS_UNKNOWN;
}

createdAt(obj?:Timestamp):Timestamp|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? (obj || new Timestamp()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

updatedAt(obj?:Timestamp):Timestamp|null {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? (obj || new Timestamp()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

roles(index: number):string
roles(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array
roles(index: number,optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
}

rolesLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static startUser(builder:flatbuffers.Builder) {
  builder.startObject(9);
}

static addUserId(builder:flatbuffers.Builder, userIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, userIdOffset, 0);
}

static addEmail(builder:flatbuffers.Builder, emailOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, emailOffset, 0);
}

static addFirstName(builder:flatbuffers.Builder, firstNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, firstNameOffset, 0);
}

static addLastName(builder:flatbuffers.Builder, lastNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, lastNameOffset, 0);
}

static addAddress(builder:flatbuffers.Builder, addressOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, addressOffset, 0);
}

static addStatus(builder:flatbuffers.Builder, status:Status) {
  builder.addFieldInt32(5, status, Status.STATUS_UNKNOWN);
}

static addCreatedAt(builder:flatbuffers.Builder, createdAtOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, createdAtOffset, 0);
}

static addUpdatedAt(builder:flatbuffers.Builder, updatedAtOffset:flatbuffers.Offset) {
  builder.addFieldOffset(7, updatedAtOffset, 0);
}

static addRoles(builder:flatbuffers.Builder, rolesOffset:flatbuffers.Offset) {
  builder.addFieldOffset(8, rolesOffset, 0);
}

static createRolesVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startRolesVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endUser(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

}
