// DO NOT EDIT!
// Ts generated by Buffman ðŸ’ª
// Versions:
//		Buffman: 0.0.1
//		Flatc: v25.2.10

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { NotificationMetrics } from '../services/notification-metrics.js';
import { User } from '../services/user.js';
import { UserActivity } from '../services/user-activity.js';


export class UserAnalyticsResponse {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):UserAnalyticsResponse {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsUserAnalyticsResponse(bb:flatbuffers.ByteBuffer, obj?:UserAnalyticsResponse):UserAnalyticsResponse {
  return (obj || new UserAnalyticsResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsUserAnalyticsResponse(bb:flatbuffers.ByteBuffer, obj?:UserAnalyticsResponse):UserAnalyticsResponse {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new UserAnalyticsResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

user(obj?:User):User|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new User()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

activities(index: number, obj?:UserActivity):UserActivity|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new UserActivity()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

activitiesLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

notificationMetrics(index: number, obj?:NotificationMetrics):NotificationMetrics|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new NotificationMetrics()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

notificationMetricsLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

totalActivities():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

totalNotificationsSent():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

totalNotificationsOpened():number {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static startUserAnalyticsResponse(builder:flatbuffers.Builder) {
  builder.startObject(6);
}

static addUser(builder:flatbuffers.Builder, userOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, userOffset, 0);
}

static addActivities(builder:flatbuffers.Builder, activitiesOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, activitiesOffset, 0);
}

static createActivitiesVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startActivitiesVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addNotificationMetrics(builder:flatbuffers.Builder, notificationMetricsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, notificationMetricsOffset, 0);
}

static createNotificationMetricsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startNotificationMetricsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addTotalActivities(builder:flatbuffers.Builder, totalActivities:number) {
  builder.addFieldInt32(3, totalActivities, 0);
}

static addTotalNotificationsSent(builder:flatbuffers.Builder, totalNotificationsSent:number) {
  builder.addFieldInt32(4, totalNotificationsSent, 0);
}

static addTotalNotificationsOpened(builder:flatbuffers.Builder, totalNotificationsOpened:number) {
  builder.addFieldInt32(5, totalNotificationsOpened, 0);
}

static endUserAnalyticsResponse(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createUserAnalyticsResponse(builder:flatbuffers.Builder, userOffset:flatbuffers.Offset, activitiesOffset:flatbuffers.Offset, notificationMetricsOffset:flatbuffers.Offset, totalActivities:number, totalNotificationsSent:number, totalNotificationsOpened:number):flatbuffers.Offset {
  UserAnalyticsResponse.startUserAnalyticsResponse(builder);
  UserAnalyticsResponse.addUser(builder, userOffset);
  UserAnalyticsResponse.addActivities(builder, activitiesOffset);
  UserAnalyticsResponse.addNotificationMetrics(builder, notificationMetricsOffset);
  UserAnalyticsResponse.addTotalActivities(builder, totalActivities);
  UserAnalyticsResponse.addTotalNotificationsSent(builder, totalNotificationsSent);
  UserAnalyticsResponse.addTotalNotificationsOpened(builder, totalNotificationsOpened);
  return UserAnalyticsResponse.endUserAnalyticsResponse(builder);
}
}
