// DO NOT EDIT!
// Dart generated by Buffman ðŸ’ª
// Versions:
//		Buffman: 1.0.0
//		Flatc: v25.2.10
// ignore_for_file: unused_import, unused_field, unused_element, unused_local_variable, constant_identifier_names

library common;

import 'dart:typed_data' show Uint8List;
import 'package:flat_buffers/flat_buffers.dart' as fb;


class Address {
  Address._(this._bc, this._bcOffset);
  factory Address(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<Address> reader = _AddressReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  String? get street => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 4);
  String? get city => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 6);
  String? get state => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 8);
  String? get postalCode => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 10);
  String? get country => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 12);

  @override
  String toString() {
    return 'Address{street: ${street}, city: ${city}, state: ${state}, postalCode: ${postalCode}, country: ${country}}';
  }
}

class _AddressReader extends fb.TableReader<Address> {
  const _AddressReader();

  @override
  Address createObject(fb.BufferContext bc, int offset) => 
    Address._(bc, offset);
}

class AddressBuilder {
  AddressBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(5);
  }

  int addStreetOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addCityOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }
  int addStateOffset(int? offset) {
    fbBuilder.addOffset(2, offset);
    return fbBuilder.offset;
  }
  int addPostalCodeOffset(int? offset) {
    fbBuilder.addOffset(3, offset);
    return fbBuilder.offset;
  }
  int addCountryOffset(int? offset) {
    fbBuilder.addOffset(4, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class AddressObjectBuilder extends fb.ObjectBuilder {
  final String? _street;
  final String? _city;
  final String? _state;
  final String? _postalCode;
  final String? _country;

  AddressObjectBuilder({
    String? street,
    String? city,
    String? state,
    String? postalCode,
    String? country,
  })
      : _street = street,
        _city = city,
        _state = state,
        _postalCode = postalCode,
        _country = country;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? streetOffset = _street == null ? null
        : fbBuilder.writeString(_street!);
    final int? cityOffset = _city == null ? null
        : fbBuilder.writeString(_city!);
    final int? stateOffset = _state == null ? null
        : fbBuilder.writeString(_state!);
    final int? postalCodeOffset = _postalCode == null ? null
        : fbBuilder.writeString(_postalCode!);
    final int? countryOffset = _country == null ? null
        : fbBuilder.writeString(_country!);
    fbBuilder.startTable(5);
    fbBuilder.addOffset(0, streetOffset);
    fbBuilder.addOffset(1, cityOffset);
    fbBuilder.addOffset(2, stateOffset);
    fbBuilder.addOffset(3, postalCodeOffset);
    fbBuilder.addOffset(4, countryOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
