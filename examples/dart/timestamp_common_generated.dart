// DO NOT EDIT!
// dart generated by Buffman ðŸ’ª
// Versions:
// 		Buffman: 1.0.0
// 		Flatc: v25.2.10
// ignore_for_file: unused_import, unused_field, unused_element, unused_local_variable, constant_identifier_names

library common;

import 'dart:typed_data' show Uint8List;
import 'package:flat_buffers/flat_buffers.dart' as fb;


class Timestamp {
  Timestamp._(this._bc, this._bcOffset);
  factory Timestamp(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<Timestamp> reader = _TimestampReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  int get seconds => const fb.Int64Reader().vTableGet(_bc, _bcOffset, 4, 0);
  int get nanos => const fb.Int32Reader().vTableGet(_bc, _bcOffset, 6, 0);

  @override
  String toString() {
    return 'Timestamp{seconds: ${seconds}, nanos: ${nanos}}';
  }
}

class _TimestampReader extends fb.TableReader<Timestamp> {
  const _TimestampReader();

  @override
  Timestamp createObject(fb.BufferContext bc, int offset) => 
    Timestamp._(bc, offset);
}

class TimestampBuilder {
  TimestampBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(2);
  }

  int addSeconds(int? seconds) {
    fbBuilder.addInt64(0, seconds);
    return fbBuilder.offset;
  }
  int addNanos(int? nanos) {
    fbBuilder.addInt32(1, nanos);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class TimestampObjectBuilder extends fb.ObjectBuilder {
  final int? _seconds;
  final int? _nanos;

  TimestampObjectBuilder({
    int? seconds,
    int? nanos,
  })
      : _seconds = seconds,
        _nanos = nanos;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    fbBuilder.startTable(2);
    fbBuilder.addInt64(0, _seconds);
    fbBuilder.addInt32(1, _nanos);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
