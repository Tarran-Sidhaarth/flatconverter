// DO NOT EDIT!
// Dart generated by Buffman ðŸ’ª
// Versions:
//		Buffman: 0.0.1
//		Flatc: v25.2.10
// ignore_for_file: unused_import, unused_field, unused_element, unused_local_variable, constant_identifier_names

library common;

import 'dart:typed_data' show Uint8List;
import 'package:flat_buffers/flat_buffers.dart' as fb;


enum Status {
  STATUS_UNKNOWN(0),
  STATUS_ACTIVE(1),
  STATUS_INACTIVE(2),
  STATUS_PENDING(3),
  STATUS_SUSPENDED(4);

  final int value;
  const Status(this.value);

  factory Status.fromValue(int value) {
    switch (value) {
      case 0: return Status.STATUS_UNKNOWN;
      case 1: return Status.STATUS_ACTIVE;
      case 2: return Status.STATUS_INACTIVE;
      case 3: return Status.STATUS_PENDING;
      case 4: return Status.STATUS_SUSPENDED;
      default: throw StateError('Invalid value $value for bit flag enum');
    }
  }

  static Status? _createOrNull(int? value) =>
      value == null ? null : Status.fromValue(value);

  static const int minValue = 0;
  static const int maxValue = 4;
  static const fb.Reader<Status> reader = _StatusReader();
}

class _StatusReader extends fb.Reader<Status> {
  const _StatusReader();

  @override
  int get size => 4;

  @override
  Status read(fb.BufferContext bc, int offset) =>
      Status.fromValue(const fb.Int32Reader().read(bc, offset));
}

