# DO NOT EDIT!
# python generated by Buffman ðŸ’ª
# Versions:
#		Buffman: 1.0.0
#		Flatc: v25.2.10

# namespace: services

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class SystemMetricsRequest(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = SystemMetricsRequest()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsSystemMetricsRequest(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # SystemMetricsRequest
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # SystemMetricsRequest
    def StartDate(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from common.Timestamp import Timestamp
            obj = Timestamp()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # SystemMetricsRequest
    def EndDate(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from common.Timestamp import Timestamp
            obj = Timestamp()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

def SystemMetricsRequestStart(builder):
    builder.StartObject(2)

def Start(builder):
    SystemMetricsRequestStart(builder)

def SystemMetricsRequestAddStartDate(builder, startDate):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(startDate), 0)

def AddStartDate(builder, startDate):
    SystemMetricsRequestAddStartDate(builder, startDate)

def SystemMetricsRequestAddEndDate(builder, endDate):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(endDate), 0)

def AddEndDate(builder, endDate):
    SystemMetricsRequestAddEndDate(builder, endDate)

def SystemMetricsRequestEnd(builder):
    return builder.EndObject()

def End(builder):
    return SystemMetricsRequestEnd(builder)
