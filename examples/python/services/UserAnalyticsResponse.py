# DO NOT EDIT!
# python generated by Buffman ðŸ’ª
# Versions:
# 		Buffman: 1.0.0
# 		Flatc: v25.2.10

# namespace: services

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class UserAnalyticsResponse(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = UserAnalyticsResponse()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsUserAnalyticsResponse(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # UserAnalyticsResponse
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # UserAnalyticsResponse
    def User(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from services.User import User
            obj = User()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # UserAnalyticsResponse
    def Activities(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 4
            x = self._tab.Indirect(x)
            from services.UserActivity import UserActivity
            obj = UserActivity()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # UserAnalyticsResponse
    def ActivitiesLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # UserAnalyticsResponse
    def ActivitiesIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        return o == 0

    # UserAnalyticsResponse
    def NotificationMetrics(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 4
            x = self._tab.Indirect(x)
            from services.NotificationMetrics import NotificationMetrics
            obj = NotificationMetrics()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # UserAnalyticsResponse
    def NotificationMetricsLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # UserAnalyticsResponse
    def NotificationMetricsIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        return o == 0

    # UserAnalyticsResponse
    def TotalActivities(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # UserAnalyticsResponse
    def TotalNotificationsSent(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # UserAnalyticsResponse
    def TotalNotificationsOpened(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

def UserAnalyticsResponseStart(builder):
    builder.StartObject(6)

def Start(builder):
    UserAnalyticsResponseStart(builder)

def UserAnalyticsResponseAddUser(builder, user):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(user), 0)

def AddUser(builder, user):
    UserAnalyticsResponseAddUser(builder, user)

def UserAnalyticsResponseAddActivities(builder, activities):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(activities), 0)

def AddActivities(builder, activities):
    UserAnalyticsResponseAddActivities(builder, activities)

def UserAnalyticsResponseStartActivitiesVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def StartActivitiesVector(builder, numElems):
    return UserAnalyticsResponseStartActivitiesVector(builder, numElems)

def UserAnalyticsResponseAddNotificationMetrics(builder, notificationMetrics):
    builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(notificationMetrics), 0)

def AddNotificationMetrics(builder, notificationMetrics):
    UserAnalyticsResponseAddNotificationMetrics(builder, notificationMetrics)

def UserAnalyticsResponseStartNotificationMetricsVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def StartNotificationMetricsVector(builder, numElems):
    return UserAnalyticsResponseStartNotificationMetricsVector(builder, numElems)

def UserAnalyticsResponseAddTotalActivities(builder, totalActivities):
    builder.PrependInt32Slot(3, totalActivities, 0)

def AddTotalActivities(builder, totalActivities):
    UserAnalyticsResponseAddTotalActivities(builder, totalActivities)

def UserAnalyticsResponseAddTotalNotificationsSent(builder, totalNotificationsSent):
    builder.PrependInt32Slot(4, totalNotificationsSent, 0)

def AddTotalNotificationsSent(builder, totalNotificationsSent):
    UserAnalyticsResponseAddTotalNotificationsSent(builder, totalNotificationsSent)

def UserAnalyticsResponseAddTotalNotificationsOpened(builder, totalNotificationsOpened):
    builder.PrependInt32Slot(5, totalNotificationsOpened, 0)

def AddTotalNotificationsOpened(builder, totalNotificationsOpened):
    UserAnalyticsResponseAddTotalNotificationsOpened(builder, totalNotificationsOpened)

def UserAnalyticsResponseEnd(builder):
    return builder.EndObject()

def End(builder):
    return UserAnalyticsResponseEnd(builder)
